#!/bin/bash
RESOURCE_TYPE="${1,,}"
NAMESPACE=$2
# Check command-line arguments
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <resource_type> <namespace>"
  exit 1
fi

if [[ ! "$RESOURCE_TYPE" =~ ^(nodes|node|pods|pod)$ ]]; then
  echo "Unsupported resource type: $RESOURCE_TYPE"
  exit 1
fi

# Column normalizator
col() {
  local input="$1"
  local width=$2
  local length=${#input}
  if ((length > width)); then
    echo "${input:0:width-2}.." # If string is longer, cut and add ".."
  elif ((length < width)); then
    printf "%-${width}s" "$input" # If shorter, append with spaces
  else
    # If equals to needed width, leave it as is
    echo "$input"
  fi
}

# Header
echo "RESOURCE:  NAMESPACE:           NAME:                                     CPU:     MEMORY:"
# 
kubectl top $RESOURCE_TYPE -n $NAMESPACE | tail -n +2 | while read line
do
  NAME=$(echo $line | awk '{print $1}')
  if [ "$RESOURCE_TYPE" == "pods" ] || [ "$RESOURCE_TYPE" == "pod" ]; then
    # Extract CPU and MEMORY from the "top" output
    CPU=$(echo $line | awk '{print $2}')
    MEMORY=$(echo $line | awk '{print $3}')
  elif [ "$RESOURCE_TYPE" == "nodes" ] || [ "$RESOURCE_TYPE" == "node" ]; then
    CPU=$(echo $line | awk '{print $2}')
    MEMORY=$(echo $line | awk '{print $4}')
  fi
  # Output the statistics to the console
  echo "$(col $RESOURCE_TYPE 10) $(col $NAMESPACE 20) $(col $NAME 40)  $(col $CPU 8) $MEMORY"
done